// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WistBot.Data;

#nullable disable

namespace WistBot.Migrations
{
    [DbContext(typeof(WistBotDbContext))]
    partial class WistBotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("WistBot.Data.Models.PhotoSizeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileUniqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("WishListItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PhotoSizeEntity");
                });

            modelBuilder.Entity("WistBot.Data.Models.UserEntity", b =>
                {
                    b.Property<long>("TelegramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TelegramId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WistBot.Data.Models.VideoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileUniqueId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ThumbId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("WishListItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ThumbId");

                    b.ToTable("VideoEntity");
                });

            modelBuilder.Entity("WistBot.Data.Models.WishListEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("WistBot.Data.Models.WishListItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentState")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ListId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PhotoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("PhotoId")
                        .IsUnique();

                    b.HasIndex("VideoId")
                        .IsUnique();

                    b.ToTable("WishListItems");
                });

            modelBuilder.Entity("WistBot.Data.Models.VideoEntity", b =>
                {
                    b.HasOne("WistBot.Data.Models.PhotoSizeEntity", "Thumb")
                        .WithMany()
                        .HasForeignKey("ThumbId");

                    b.Navigation("Thumb");
                });

            modelBuilder.Entity("WistBot.Data.Models.WishListEntity", b =>
                {
                    b.HasOne("WistBot.Data.Models.UserEntity", "Owner")
                        .WithMany("WishLists")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("WistBot.Data.Models.WishListItemEntity", b =>
                {
                    b.HasOne("WistBot.Data.Models.WishListEntity", "List")
                        .WithMany("Items")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WistBot.Data.Models.PhotoSizeEntity", "Photo")
                        .WithOne("WishListItem")
                        .HasForeignKey("WistBot.Data.Models.WishListItemEntity", "PhotoId");

                    b.HasOne("WistBot.Data.Models.VideoEntity", "Video")
                        .WithOne("WishListItem")
                        .HasForeignKey("WistBot.Data.Models.WishListItemEntity", "VideoId");

                    b.Navigation("List");

                    b.Navigation("Photo");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("WistBot.Data.Models.PhotoSizeEntity", b =>
                {
                    b.Navigation("WishListItem");
                });

            modelBuilder.Entity("WistBot.Data.Models.UserEntity", b =>
                {
                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("WistBot.Data.Models.VideoEntity", b =>
                {
                    b.Navigation("WishListItem");
                });

            modelBuilder.Entity("WistBot.Data.Models.WishListEntity", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
